[{"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/index.js":"1","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/App.js":"2","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/navbar/index.js":"3","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/invoiceList/index.js":"4","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/button/index.js":"5","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/pages/home/index.js":"6","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/pages/newInvoice/index.js":"7","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/newInvoice/index.js":"8","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/data.js":"9","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/rowItems/index.js":"10"},{"size":146,"mtime":1608527319985,"results":"11","hashOfConfig":"12"},{"size":486,"mtime":1608596980208,"results":"13","hashOfConfig":"12"},{"size":477,"mtime":1608615443238,"results":"14","hashOfConfig":"12"},{"size":2438,"mtime":1608759643259,"results":"15","hashOfConfig":"12"},{"size":744,"mtime":1608564344472,"results":"16","hashOfConfig":"12"},{"size":168,"mtime":1608594106036,"results":"17","hashOfConfig":"12"},{"size":179,"mtime":1608597001661,"results":"18","hashOfConfig":"12"},{"size":3755,"mtime":1608763831023,"results":"19","hashOfConfig":"12"},{"size":362,"mtime":1608618415451,"results":"20","hashOfConfig":"12"},{"size":862,"mtime":1608748192847,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1x1qcch",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/index.js",[],["47","48"],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/App.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/navbar/index.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/invoiceList/index.js",["49"],"import React, { useState } from \"react\";\nimport { Button } from \"../button\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.scss\";\n\nimport NoDataIcon from \"../../assets/images/noData.svg\";\n\nfunction InvoiceList() {\n  const [existInfo, setExistInfo] = useState(true);\n\n  const defaultInvoiceInfo = [\n    {\n      invoiceNumber: 6788,\n      client: \"Ulter Technologies\",\n      subTotal: 2000,\n      discount: 10,\n      total: 1800,\n    },\n    {\n      invoiceNumber: 1234,\n      client: \"Luxon Engeneering\",\n      subTotal: 1500,\n      discount: 0,\n      total: 1500,\n    },\n    {\n      invoiceNumber: 9870,\n      client: \"Cyvic Inc.\",\n      subTotal: 3200,\n      discount: 0,\n      total: 3200,\n    },\n    {\n      invoiceNumber: 8765,\n      client: \"Samsan Tech\",\n      subTotal: 500,\n      discount: 20,\n      total: 400,\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"list-cotainer\">\n        <h1>Invoices</h1>\n        {existInfo ? (\n          <div className=\"table-container\" id=\"card\">\n            <table role=\"table\">\n              <thead>\n                <tr role=\"row\">\n                  <th role=\"columnheader\">Invoice Number</th>\n                  <th role=\"columnheader\">Client</th>\n                  <th role=\"columnheader\">Subtotal</th>\n                  <th role=\"columnheader\">Discount</th>\n                  <th role=\"columnheader\">Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {defaultInvoiceInfo.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <th data-label=\"Invoice Number\">{item.invoiceNumber}</th>\n                      <th data-label=\"Client\">{item.client}</th>\n                      <th data-label=\"Subtotal\">{item.subTotal}</th>\n                      <th data-label=\"Discount\">{item.discount}</th>\n                      <th data-label=\"Total\">{item.total}</th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"no-info\">\n            <img src={NoDataIcon} alt=\"No data icon\" className=\"no-data-icon\" />\n            <h2>There are no data to show</h2>\n          </div>\n        )}\n        <Link to=\"/new-invoice\" className=\"new-invoice-btn\">\n          <Button buttonSize=\"btn--large\">New Invoice</Button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default InvoiceList;\n","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/button/index.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/pages/home/index.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/pages/newInvoice/index.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/newInvoice/index.js",["50","51","52","53","54"],"import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport DatePicker from \"react-date-picker\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { clients, products } from \"../data\";\nimport { Button } from \"../button\";\nimport { RiCalendar2Fill } from \"react-icons/ri\";\nimport RowItems from \"../rowItems\";\n\nfunction InvoiceForm() {\n  const [date, setDate] = useState(new Date());\n  const [invoiceNumber, setInvoiceNumber] = useState(1);\n  const [row, setRow] = useState(0);\n  const [discount, setDiscount] = useState(0);\n  const addRowHandler = () => {\n    setRow(row + 1);\n  };\n  const [productSelected, setProductSelected] = useState({});\n\n  const handleAddRowItem = (e) => {\n    this.setProductSelected({\n      // use optimistic uuid for drag drop; in a production app this could be a database id\n      lineItems: this.state.lineItems.concat([\n        { line: uuidv4(), name: \"\", description: \"\", quantity: 0, price: 0.0 },\n      ]),\n    });\n  };\n\n  console.log(\"DISCOUNT\", discount);\n\n  return (\n    <>\n      <div className=\"form-container\" id=\"mobile\">\n        <h1>Invoices</h1>\n        <form>\n          <div className=\"form-header\">\n            <div className=\"header-row\">\n              <label> Invoice Number</label>\n              <input\n                id=\"right-item\"\n                type=\"text\"\n                value={invoiceNumber}\n                disabled\n              />\n            </div>\n            <div className=\"header-row\">\n              <label>Date</label>\n              <DatePicker\n                className=\"date-picker\"\n                id=\"right-item\"\n                clearIcon={null}\n                format=\"M-d-y\"\n                calendarIcon={<RiCalendar2Fill className=\"calendar-icon\" />}\n                onChange={setDate}\n                required={true}\n                value={date}\n              />\n            </div>\n            <div className=\"header-row\">\n              <label>Client</label>\n              <select id=\"right-item\" defaultValue=\"\">\n                <option hidden value=\"\">\n                  Select..\n                </option>\n                {clients.map((item, index) => {\n                  return (\n                    <option key={index} value={item}>\n                      {item}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div className=\"header-row\">\n              <label>Discount</label>\n              <input\n                id=\"right-item\"\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                placeholder=\"0%\"\n                onChange={(e) => setDiscount(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"form-body\">\n            <div className=\"select-product\">\n              <label>Product</label>\n              <select id=\"right-item\" defaultValue=\"\">\n                <option hidden value=\"\">\n                  Select..\n                </option>\n                {products.map((item, index) => {\n                  return (\n                    <option\n                      key={index}\n                      value={item.id}\n                      onChange={(e) =>\n                        setProductSelected({\n                          id: e.currentTarget.id,\n                          description: item.description,\n                          price: item.price,\n                        })\n                      }\n                    ></option>\n                  );\n                })}\n              </select>\n            </div>\n            <Button>Add Item</Button>\n          </div>\n        </form>\n        {/* <RowItems addHandler={this.handleAddRowItem} /> */}\n      </div>\n    </>\n  );\n}\n\nexport default InvoiceForm;\n","/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/data.js",[],"/Users/tats/Documents/JOBS/Ulter-Tech/Test/project/invoices-web/src/components/rowItems/index.js",["55","56","57","58"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport { Button } from \"../button\";\n\nexport class RowItems extends Component {\n  static propTypes = {};\n\n  render() {\n    const { items, addHandler } = this.props;\n    return (\n      <form>\n        <div className=\"items-container\">\n          <div className=\"warning-message\">Maximun number of item reached</div>\n          <table role=\"table\">\n            <thead>\n              <tr role=\"row\">\n                <th role=\"columnheader\">Product Id</th>\n                <th role=\"columnheader\">Description</th>\n                <th role=\"columnheader\">Quantity</th>\n              </tr>\n            </thead>\n            <tbody></tbody>\n          </table>\n          <div className=\"row header\"></div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default RowItems;\n",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":9,"column":21,"nodeType":"67","messageId":"68","endLine":9,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":8,"column":8,"nodeType":"67","messageId":"68","endLine":8,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":12,"column":25,"nodeType":"67","messageId":"68","endLine":12,"endColumn":41},{"ruleId":"65","severity":1,"message":"71","line":15,"column":9,"nodeType":"67","messageId":"68","endLine":15,"endColumn":22},{"ruleId":"65","severity":1,"message":"72","line":18,"column":10,"nodeType":"67","messageId":"68","endLine":18,"endColumn":25},{"ruleId":"65","severity":1,"message":"73","line":20,"column":9,"nodeType":"67","messageId":"68","endLine":20,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":17},{"ruleId":"65","severity":1,"message":"75","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":16},{"ruleId":"65","severity":1,"message":"76","line":10,"column":13,"nodeType":"67","messageId":"68","endLine":10,"endColumn":18},{"ruleId":"65","severity":1,"message":"77","line":10,"column":20,"nodeType":"67","messageId":"68","endLine":10,"endColumn":30},{"ruleId":"61","replacedBy":"78"},{"ruleId":"63","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'setExistInfo' is assigned a value but never used.","Identifier","unusedVar","'RowItems' is defined but never used.","'setInvoiceNumber' is assigned a value but never used.","'addRowHandler' is assigned a value but never used.","'productSelected' is assigned a value but never used.","'handleAddRowItem' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'items' is assigned a value but never used.","'addHandler' is assigned a value but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]